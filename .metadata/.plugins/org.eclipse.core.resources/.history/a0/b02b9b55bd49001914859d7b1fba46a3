package com.hagos.rest.webservices.restfulwebservices.user;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

@RestController
public class UserResourceController {
	
	@Autowired
	private UserDaoService userDao;
	//retrieve all users
	@GetMapping("/users")
	public List<User> findAll(){
		return userDao.findAll();
	}
	
	
	//retrieve user
	@GetMapping("/users/{id}")
	public User findOne(@PathVariable int id) {
		User user = userDao.findOne(id);
		if(user==null) {
			throw new UserNotFoundException("id- " + id);
		}
		return user;
	}
	
	@PostMapping("/users")
	public ResponseEntity<Object> save(@RequestBody User user) {
		User savedUser = userDao.save(user);

		for (User user1: userDao.findAll() ) {
			if(user1.getName().equalsIgnoreCase(user.getName())) {
				//&& user1.getBirthDate().equals(user.getBirthDate())
				throw  new UserExistsException("Name: " + user1.getName() + " Date of Birth: " +
				user1.getBirthDate() + "Already exists");
			}		
					
		}
		URI location = ServletUriComponentsBuilder
			.fromCurrentRequest()
			.path("/{id}")
			.buildAndExpand(savedUser.getId())
			.toUri();
		return ResponseEntity.created(location).build();
	}
	
//	@PutMapping("/users")
//	public void update(@RequestBody User user) {
//		if(user.getId()==userDao.findOne(user.getId()).getId()) {
//			userDao.update(user);
//		}
//		userDao.save(user);
//	}


}
